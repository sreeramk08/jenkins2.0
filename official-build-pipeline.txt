/*
 This pipeline code will build a Intellego binary, install on servers and run tests
*/

timestamps {
stage 'Build the Intellego binary'

// "Send an email first!"
node ('master') {
   mail (to: MAILING_LIST,
     subject: "Job ${env.JOB_NAME} was kicked off!",
     body: "Parameters - Code: INTELLEGO_CODE_BRANCH  RESTAPI: RESTAPI_BRANCH");
}

// If prebuilt-binary is present, don't build from scratch
if ( PREBUILT_BINARY_PATH ) {
  echo "Don't rebuild!!"
  def DIR = PREBUILT_BINARY_PATH
  node ('10.0.158.153') {
    ws("${DIR}"){
      archive '*.bin'
    }
  } //node
} // if 
else {
  echo "Building from scratch..."
  
  node ('10.0.158.153') {
     ws('/home/support/intellego') {
       echo "Checking out code..."
       git url: 'ssh://git@10.0.135.6/intellego.git', branch: INTELLEGO_CODE_BRANCH
     }

     // Cleanup old binary
     sh 'sudo rm -rf /home/support/bin/REL_6.5/root/*'

     // Come up with a name for the new BINARY based on timestamp
     BINARY = INTELLEGO_VERSION + '.' + INTELLEGO_CODE_BRANCH + '.' + env.BUILD_TIMESTAMP

     echo '*** Building BINARY from Scratch ***'

     ws('/home/support/intellego/build_tool') {
       sh 'sudo ./build-intellego.sh ' + BINARY
     }

     def DIR = '/home/support/bin/REL_' + INTELLEGO_VERSION + '/root/' + BINARY
     ws("${DIR}") {
       archive '*.bin'
     }
  }// node
} //else


stage 'copy bin file to nodes'

parallel 'Node 131': {
            node('10.0.158.131') {
               unarchive mapping: ['*.bin' : '.']
               sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        }, // end of 131
'Node 132': {
            node('10.0.158.132') {
                unarchive mapping: ['*.bin' : '.']
                sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        }, // end of 132
'Node 134': {
            node('10.0.158.134') {
                unarchive mapping: ['*.bin' : '.']
                sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        }, // end of 134
'Node 147': {
            node('10.0.158.147') {
                unarchive mapping: ['*.bin' : '.']
                sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        }, // end of 147
'Node 148': {
            node('10.0.158.148') {
                unarchive mapping: ['*.bin' : '.']
                sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        }, // end of 148
'Node 151': {
            node('10.0.158.151') {
                unarchive mapping: ['*.bin' : '.']
                sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        }, // end of 151
'Node 152': {
            node('10.0.158.152') {
                unarchive mapping: ['*.bin' : '.']
                sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        }, // end of 152
'Node 161': {
            node('10.0.158.161') {
                unarchive mapping: ['*.bin' : '.']
                sh 'sudo rm -f /SS8/SS8_Intellego.bin; sudo mv *.bin /SS8/SS8_Intellego.bin; sudo chmod 775 /SS8/SS8_Intellego.bin'
            } //end of node
        } // end of 161

stage 'Install and Test'

parallel '134-148': {

            //Install Intellego DPE on Node 134
            node('10.0.158.134')
            {
              sh 'sudo -u root -i /home/support/stop-install.sh'
            }
            // Install intellego on 148
            node('10.0.158.148') {
              sh 'sudo -u root -i service ntpd stop; sudo -u root -i ntpdate 10.0.158.153; sudo -u root -i service ntpd start'
              sh 'sudo -u root -i /home/support/stop-install-https.sh'
              sh 'sudo -u root -i /home/support/copy-datawipe-conf.sh'
              sh 'sudo -u root -i /etc/init.d/intellego restart; sudo -u root -i /etc/init.d/intellegooamp start'
              sh 'sudo -u root -i /home/support/checkPorts.sh'
            }
            //Restart vmc on 134
            node('10.0.158.134') {
              sh 'date; sudo -u root -i /home/support/checkVMC.sh; date'
            }

            //REST API Reporting + DataWipe + IO Workflow
            node('master') {
              sh 'env'
              git url: 'git@bitbucket.org:ss8/intellego-rest-api.git', branch: RESTAPI_BRANCH
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_level1_tests.xml -Denv=resources/config/qa-at-158-148.yaml run'
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_level2_tests.xml -Denv=resources/config/qa-at-158-148.yaml run'
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_kddi_tests.xml -Denv=resources/config/qa-at-158-148.yaml run'
            } //node master

}, //end of 134-148

'151-152': {
            // Install Intellego DPE on Node 152'
            node('10.0.158.152')
            {
              sh 'sudo -u root -i /home/support/stop-install.sh'
            } //end of node

            // Install Intellego on Node 151'
            node('10.0.158.151') {
              sh 'sudo -u root -i service ntpd stop; sudo -u root -i ntpdate 10.0.158.153; sudo -u root -i service ntpd start'
              sh 'sudo -u root -i /home/support/stop-install-https.sh'
              sh 'sudo -u root -i /home/support/copy-datawipe-conf.sh'
              sh 'sudo -u root -i /etc/init.d/intellego restart; sudo -u root -i /etc/init.d/intellegooamp start'
              sh 'sudo -u root -i /home/support/checkPorts.sh'
            } //end of node

            //Restart vmc on 152'
	    echo "*** Restarting VMC on 152 ***"
            node('10.0.158.152') {
              sh 'date; sudo -u root -i /home/support/checkVMC.sh; date'
            } //node

            //REST API Reporting + DataWipe + IO Workflow'
            node('master') {
              sh 'env'
              git url: 'git@bitbucket.org:ss8/intellego-rest-api.git', branch: RESTAPI_BRANCH
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_level3_tests.xml -Denv=resources/config/qa-at-158-151.yaml run'
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_all_tests.xml -Denv=resources/config/qa-at-158-151.yaml run'
            }//node
}, //151-152

'131-132': {
            //'Install Intellego DPE on Node 132'
            node('10.0.158.132')
            {
              sh 'sudo -u root -i /home/support/stop-install.sh'
            } //end of node
            //Install Intellego on Node 131'
            node('10.0.158.131') {
              sh 'sudo -u root -i service ntpd stop; sudo -u root -i ntpdate 10.0.158.153; sudo -u root -i service ntpd start'
              sh 'sudo -u root -i /home/support/stop-install-https.sh'
              sh 'sudo -u root -i /home/support/copy-datawipe-conf.sh'
              sh 'sudo -u root -i /etc/init.d/intellego restart; sudo -u root -i /etc/init.d/intellegooamp start'
              sh 'sudo -u root -i /home/support/checkPorts.sh'
            } //end of node

            //Restart vmc on 132'
            node('10.0.158.132') {
              sh 'date; sudo -u root -i /home/support/checkVMC.sh; date'
            } //node

            //REST API Reporting + DataWipe + IO Workflow'
            node('master') {
              sh 'env'
              git url: 'git@bitbucket.org:ss8/intellego-rest-api.git', branch: RESTAPI_BRANCH
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_reporting_tests.xml -Denv=resources/config/qa-at-158-131.yaml run'
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_datawipe_tests.xml -Denv=resources/config/qa-at-158-131.yaml run'
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_io_tests.xml -Denv=resources/config/qa-at-158-131.yaml run'
            }//node
}, // 131-132

'147-161': {
            //'Install Intellego DPE on Node 147'
            node('10.0.158.147')
            {
              sh 'sudo -u root -i /home/support/stop-install.sh'
            } //end of node

            // Install Intellego on Node 161'
            node('10.0.158.161') {
              sh 'sudo -u root -i service ntpd stop; sudo -u root -i ntpdate 10.0.158.153; sudo -u root -i service ntpd start'
              sh 'sudo -u root -i /home/support/stop-install-https.sh'
              sh 'sudo -u root -i /home/support/copy-datawipe-conf.sh'
              sh 'sudo -u root -i /etc/init.d/intellego restart; sudo -u root -i /etc/init.d/intellegooamp start'
              sh 'sudo -u root -i /home/support/checkPorts.sh'
            } //end of node

            //Restart vmc on 147'
            node('10.0.158.147') {
              sh 'date; sudo -u root -i /home/support/checkVMC.sh; date'
            } //node

            //REST API v2 regression and Telephony'
            node('master') {
              sh 'env'
              git url: 'git@bitbucket.org:ss8/intellego-rest-api.git', branch: RESTAPI_BRANCH
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_regression_tests.xml -Denv=resources/config/qa-at-158-161.yaml run'
              sh './gradlew -Dreporting=' + REPORTING + ' -DbuildLogUrl=' + env.BUILD_URL + '/console -DpipelineName=' + pipelineName + ' -Dsuite=resources/suites/v2_telephony_tests.xml -Denv=resources/config/qa-at-158-161.yaml run'
            }//node
}  // 147-161
} // timestamps


